@using BlockchainDemonstratorApi.Models.Classes
@model Game 

@{
    ViewData["Title"] = "Graphs";
    Player player = (Player)ViewData["Player"];
}


<h1>Well done @player.Name!</h1>
<h2>You made a profit of €@player.Profit</h2>
<h2>Your team made a total profit of €@Model.Players.Sum(p => p.Profit)</h2>


<canvas id="inventoryChart" width="800" height="400"></canvas>


@section Scripts{
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/BeerGame.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.3.0/dist/chart.min.js"></script>

    <script>
        var ctx = document.getElementById('inventoryChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['day1', 'day2', 'day3', 'day4', 'day5', 'day6', 'day2', 'day3', 'day4', 'day5', 'day6'],
                datasets: [{
                    label: 'Inventory',
                    data: @player.InventoryHistory,
                    fill: true,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',

                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>

}