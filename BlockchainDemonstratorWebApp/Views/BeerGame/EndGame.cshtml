@using BlockchainDemonstratorApi.Models.Classes
@model Game

@{
    ViewData["Title"] = "Graphs";
    Player player = (Player)ViewData["Player"];

    string inventoryHistoryLabels = Graphs.CreateLabels(player.InventoryHistory);
    string inventoryHistoryData = Graphs.CreateData(player.InventoryHistory);

    string orderWorthHistoryLabels = Graphs.CreateLabels(player.OrderWorthHistory);
    string orderWorthHistoryData = Graphs.CreateData(player.OrderWorthHistory);

    string overallProfitHistoryLabels = Graphs.CreateLabels(player.OverallProfitHistory);
    string overallProfitHistoryData = Graphs.CreateData(player.OverallProfitHistory);

    string grossProfitHistoryLabels = Graphs.CreateLabels(player.GrossProfitHistory);
    string grossProfitHistoryData = Graphs.CreateData(player.GrossProfitHistory);

    string endText = (player.Profit >= 0) ? "Well Done " : "Better luck next time ";
    string profitDeficitPlayer = (player.Profit >= 0) ? "profit" : "deficit";
    string profitDeficitTeam = (Model.Players.Sum(p => p.Profit) >= 0) ? "profit" : "deficit";
    string profitValuePlayer = (player.Profit >= 0) ? "€" + player.Profit : "-€" + (player.Profit * -1);
    string profitValueTeam = (Model.Players.Sum(p => p.Profit) >= 0) ? "€" + Model.Players.Sum(p => p.Profit) : "-€" + (Model.Players.Sum(p => p.Profit) * -1);
}

<div class="endGrid">
    <div class="endText box">
        <h1 style="display:inline-block">@endText<span class="gradient-font">@player.Name</span>!</h1>
        <h2 style="display:inline-block">You made a @profitDeficitPlayer of <nobr class="gradient-font">@profitValuePlayer</nobr></h2>
        <h2 style="display:inline-block">Your team made a total @profitDeficitTeam of <nobr class="gradient-font">@profitValueTeam</nobr></h2>
    </div>
    <div class="endStatistics box">
        <canvas id="inventoryChart" style="max-width:350px;max-height:350px; display:inline-block;"></canvas>
        <canvas id="orderWorthChart" style="max-width:350px;max-height:350px;display:inline-block;"></canvas>
        <canvas id="overallProfitChart" style="max-width:350px;max-height:350px; display:inline-block;"></canvas>
        <canvas id="grossProfitChart" style="max-width:350px;max-height:350px; display:inline-block;"></canvas>
    </div>
</div>



@section Scripts{
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/BeerGame.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.3.0/dist/chart.min.js"></script>

    <script>
        BeerGame.init("@ViewData["GameId"]", "@player.Id", "@ViewData["RestApiUrl"]");
        BeerGame.drawChart(@Html.Raw(inventoryHistoryLabels), @Html.Raw(inventoryHistoryData), "inventoryChart", "Inventory", "rgba(46, 49, 146, 1)");
        BeerGame.drawChart(@Html.Raw(orderWorthHistoryLabels), @Html.Raw(orderWorthHistoryData), "orderWorthChart", "Order worth", "rgba(46, 49, 146, 1)");
        BeerGame.drawChart(@Html.Raw(overallProfitHistoryLabels), @Html.Raw(overallProfitHistoryData), "overallProfitChart", "Overall profit", "rgba(46, 49, 146, 1)");
        BeerGame.drawChart(@Html.Raw(grossProfitHistoryLabels), @Html.Raw(grossProfitHistoryData), "grossProfitChart", "Gross profit", "rgba(46, 49, 146, 1)");
    </script>

}