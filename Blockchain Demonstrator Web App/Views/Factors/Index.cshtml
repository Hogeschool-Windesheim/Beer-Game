@using BlockchainDemonstratorApi.Models.Classes;
@model BlockchainDemonstratorApi.Models.Classes.Factors

@{
    ViewData["Title"] = "Index";
    List<Option> options = (List<Option>) ViewData["Options"];
    List<Role> roles = (List<Role>) ViewData["Roles"];
}

<link rel="stylesheet" href="~/css/GameTuning.css"/>

<h1>Game tuning</h1>


<div class="tabs">
    <button class="tabs--button" onclick="openTab('factors')">Factors</button>
    <button class="tabs--button" onclick="openTab('retailer')">Retailer</button>
    <button class="tabs--button" onclick="openTab('manufacturer')">Manufacturer</button>
    <button class="tabs--button" onclick="openTab('processor')">Processor</button>
    <button class="tabs--button" onclick="openTab('farmer')">Farmer</button>
</div>

<div id="factors" class="tabs--content">
    <h4>Factors</h4>
    <hr/>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id"/>
                <div class="form-group">
                    <label asp-for="retailTransport" class="control-label"></label>
                    <input asp-for="retailTransport" class="form-control"/>
                    <span asp-validation-for="retailTransport" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="manuTransport" class="control-label"></label>
                    <input asp-for="manuTransport" class="form-control"/>
                    <span asp-validation-for="manuTransport" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="procTransport" class="control-label"></label>
                    <input asp-for="procTransport" class="form-control"/>
                    <span asp-validation-for="procTransport" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="farmerTransport" class="control-label"></label>
                    <input asp-for="farmerTransport" class="form-control"/>
                    <span asp-validation-for="farmerTransport" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="holdingFactor" class="control-label"></label>
                    <input asp-for="holdingFactor" class="form-control"/>
                    <span asp-validation-for="holdingFactor" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="roundIncrement" class="control-label"></label>
                    <input asp-for="roundIncrement" class="form-control"/>
                    <span asp-validation-for="roundIncrement" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="retailProductPrice" class="control-label"></label>
                    <input asp-for="retailProductPrice" class="form-control"/>
                    <span asp-validation-for="retailProductPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="manuProductPrice" class="control-label"></label>
                    <input asp-for="manuProductPrice" class="form-control"/>
                    <span asp-validation-for="manuProductPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="procProductPrice" class="control-label"></label>
                    <input asp-for="procProductPrice" class="form-control"/>
                    <span asp-validation-for="procProductPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="farmerProductPrice" class="control-label"></label>
                    <input asp-for="farmerProductPrice" class="form-control"/>
                    <span asp-validation-for="farmerProductPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="harvesterProductPrice" class="control-label"></label>
                    <input asp-for="harvesterProductPrice" class="form-control"/>
                    <span asp-validation-for="harvesterProductPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="setupCost" class="control-label"></label>
                    <input asp-for="setupCost" class="form-control"/>
                    <span asp-validation-for="setupCost" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="initialCapital" class="control-label"></label>
                    <input asp-for="initialCapital" class="form-control"/>
                    <span asp-validation-for="initialCapital" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary"/>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="retailer" class="tabs--content">
    <h4>Retailer</h4>
    <hr/>
    <div class="tabs">
        <button class="tabs--content--options-button" onclick="openOptionsTab('retailerBasic')">Basic</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('retailerYouProvide')">You Provide</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('retailerYouProvideWithHelp')">You Provide with Help</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('retailerTrustedParty')">Trusted party</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('retailerDlt')">DLT</button>
    </div>

    <div id="retailerBasic" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "Basic").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "Basic").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "Basic").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "Basic").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "Basic").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "Basic").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "Basic").GuaranteedCapacityPenalty</p>
    </div>
    <div id="retailerYouProvide" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvide").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvide").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvide").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvide").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvide").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvide").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvide").GuaranteedCapacityPenalty</p>
    </div>
    <div id="retailerYouProvideWithHelp" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvideWithHelp").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvideWithHelp").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvideWithHelp").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvideWithHelp").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvideWithHelp").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvideWithHelp").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "YouProvideWithHelp").GuaranteedCapacityPenalty</p>
    </div>
    <div id="retailerTrustedParty" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "TrustedParty").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "TrustedParty").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "TrustedParty").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "TrustedParty").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "TrustedParty").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "TrustedParty").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "TrustedParty").GuaranteedCapacityPenalty</p>
    </div>

    <div id="retailerDlt" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "DLT").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "DLT").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "DLT").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "DLT").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "DLT").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "DLT").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Retailer" && x.Name == "DLT").GuaranteedCapacityPenalty</p>
    </div>

</div>

<div id="manufacturer" class="tabs--content">
    <h4>Manufacturer</h4>
    <hr/>
    <div class="tabs">
        <button class="tabs--content--options-button" onclick="openOptionsTab('manufacturerBasic')">Basic</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('manufacturerYouProvide')">You Provide</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('manufacturerYouProvideWithHelp')">You Provide with Help</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('manufacturerTrustedParty')">Trusted party</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('manufacturerDlt')">DLT</button>
    </div>

    <div id="manufacturerBasic" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "Basic").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "Basic").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "Basic").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "Basic").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "Basic").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "Basic").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "Basic").GuaranteedCapacityPenalty</p>
    </div>
    <div id="manufacturerYouProvide" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvide").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvide").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvide").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvide").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvide").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvide").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvide").GuaranteedCapacityPenalty</p>
    </div>
    <div id="manufacturerYouProvideWithHelp" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvideWithHelp").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvideWithHelp").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvideWithHelp").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvideWithHelp").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvideWithHelp").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvideWithHelp").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "YouProvideWithHelp").GuaranteedCapacityPenalty</p>
    </div>
    <div id="manufacturerTrustedParty" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "TrustedParty").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "TrustedParty").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "TrustedParty").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "TrustedParty").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "TrustedParty").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "TrustedParty").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "TrustedParty").GuaranteedCapacityPenalty</p>
    </div>

    <div id="manufacturerDlt" class="tabs--content--options-content">
        <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "DLT").CostOfStartUp</p>
        <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "DLT").CostOfMaintenance</p>
        <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "DLT").TransportCostOneTrip</p>
        <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "DLT").TransportCostPerDay</p>
        <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "DLT").LeadTime</p>
        <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "DLT").Flexibility</p>
        <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Manufacturer" && x.Name == "DLT").GuaranteedCapacityPenalty</p>
    </div>
</div>

<div id="processor" class="tabs--content">
    <h4>Processor</h4>
    <hr/>
    <div class="tabs">
        <button class="tabs--content--options-button" onclick="openOptionsTab('processorBasic')">Basic</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('processorYouProvide')">You Provide</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('processorYouProvideWithHelp')">You Provide with Help</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('processorTrustedParty')">Trusted party</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('processorDlt')">DLT</button>
    </div>

    <div id="processorBasic" class="tabs--content--options-content">
            <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "Basic").CostOfStartUp</p>
            <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "Basic").CostOfMaintenance</p>
            <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "Basic").TransportCostOneTrip</p>
            <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "Basic").TransportCostPerDay</p>
            <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "Basic").LeadTime</p>
            <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "Basic").Flexibility</p>
            <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "Basic").GuaranteedCapacityPenalty</p>
        </div>
        <div id="processorYouProvide" class="tabs--content--options-content">
            <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvide").CostOfStartUp</p>
            <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvide").CostOfMaintenance</p>
            <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvide").TransportCostOneTrip</p>
            <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvide").TransportCostPerDay</p>
            <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvide").LeadTime</p>
            <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvide").Flexibility</p>
            <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvide").GuaranteedCapacityPenalty</p>
        </div>
        <div id="processorYouProvideWithHelp" class="tabs--content--options-content">
            <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvideWithHelp").CostOfStartUp</p>
            <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvideWithHelp").CostOfMaintenance</p>
            <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvideWithHelp").TransportCostOneTrip</p>
            <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvideWithHelp").TransportCostPerDay</p>
            <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvideWithHelp").LeadTime</p>
            <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvideWithHelp").Flexibility</p>
            <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "YouProvideWithHelp").GuaranteedCapacityPenalty</p>
        </div>
        <div id="processorTrustedParty" class="tabs--content--options-content">
            <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "TrustedParty").CostOfStartUp</p>
            <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "TrustedParty").CostOfMaintenance</p>
            <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "TrustedParty").TransportCostOneTrip</p>
            <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "TrustedParty").TransportCostPerDay</p>
            <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "TrustedParty").LeadTime</p>
            <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "TrustedParty").Flexibility</p>
            <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "TrustedParty").GuaranteedCapacityPenalty</p>
        </div>
    
        <div id="processorDlt" class="tabs--content--options-content">
            <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "DLT").CostOfStartUp</p>
            <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "DLT").CostOfMaintenance</p>
            <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "DLT").TransportCostOneTrip</p>
            <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "DLT").TransportCostPerDay</p>
            <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "DLT").LeadTime</p>
            <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "DLT").Flexibility</p>
            <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Processor" && x.Name == "DLT").GuaranteedCapacityPenalty</p>
        </div>
</div>

<div id="farmer" class="tabs--content">
    <h4>Farmer</h4>
    <hr/>
    <div class="tabs">
        <button class="tabs--content--options-button" onclick="openOptionsTab('farmerBasic')">Basic</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('farmerYouProvide')">You Provide</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('farmerYouProvideWithHelp')">You Provide with Help</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('farmerTrustedParty')">Trusted party</button>
        <button class="tabs--content--options-button" onclick="openOptionsTab('farmerDlt')">DLT</button>
    </div>

   <div id="farmerBasic" class="tabs--content--options-content">
           <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "Basic").CostOfStartUp</p>
           <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "Basic").CostOfMaintenance</p>
           <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "Basic").TransportCostOneTrip</p>
           <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "Basic").TransportCostPerDay</p>
           <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "Basic").LeadTime</p>
           <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "Basic").Flexibility</p>
           <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "Basic").GuaranteedCapacityPenalty</p>
       </div>
       <div id="farmerYouProvide" class="tabs--content--options-content">
           <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvide").CostOfStartUp</p>
           <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvide").CostOfMaintenance</p>
           <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvide").TransportCostOneTrip</p>
           <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvide").TransportCostPerDay</p>
           <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvide").LeadTime</p>
           <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvide").Flexibility</p>
           <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvide").GuaranteedCapacityPenalty</p>
       </div>
       <div id="farmerYouProvideWithHelp" class="tabs--content--options-content">
           <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvideWithHelp").CostOfStartUp</p>
           <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvideWithHelp").CostOfMaintenance</p>
           <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvideWithHelp").TransportCostOneTrip</p>
           <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvideWithHelp").TransportCostPerDay</p>
           <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvideWithHelp").LeadTime</p>
           <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvideWithHelp").Flexibility</p>
           <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "YouProvideWithHelp").GuaranteedCapacityPenalty</p>
       </div>
       <div id="farmerTrustedParty" class="tabs--content--options-content">
           <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "TrustedParty").CostOfStartUp</p>
           <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "TrustedParty").CostOfMaintenance</p>
           <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "TrustedParty").TransportCostOneTrip</p>
           <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "TrustedParty").TransportCostPerDay</p>
           <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "TrustedParty").LeadTime</p>
           <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "TrustedParty").Flexibility</p>
           <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "TrustedParty").GuaranteedCapacityPenalty</p>
       </div>
   
       <div id="farmerDlt" class="tabs--content--options-content">
           <p>Cost of startup: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "DLT").CostOfStartUp</p>
           <p>Cost of maintenance: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "DLT").CostOfMaintenance</p>
           <p>Transport one trip: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "DLT").TransportCostOneTrip</p>
           <p>transport cost per day: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "DLT").TransportCostPerDay</p>
           <p>leadtime: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "DLT").LeadTime</p>
           <p>flexibility: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "DLT").Flexibility</p>
           <p>Guaranteed capacity penalty: @options.FirstOrDefault(x => x.RoleId == "Farmer" && x.Name == "DLT").GuaranteedCapacityPenalty</p>
       </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts
{
    <script>
    
    
    
    function openTab(tabName) {      
      // Get all elements with class="tabcontent" and hide them
      let tabs = $(".tabs--content")
      
      tabs.css('display', 'none')
      
    
      // Get all elements with class="tablinks" and remove the class "active"
      tabs.removeClass('active')
    
      // Show the current tab, and add an "active" class to the button that opened the tab
      let selectedTab = $(`#${tabName}`)
      selectedTab.css('display', 'block');
      selectedTab.addClass('active');
    }
    
    function openOptionsTab(tabName) {      
          // Get all elements with class="tabcontent" and hide them
          let tabs = $(".tabs--content--options-content")
          
          tabs.css('display', 'none')
          
        
          // Get all elements with class="tablinks" and remove the class "active"
          tabs.removeClass('active')
        
          // Show the current tab, and add an "active" class to the button that opened the tab
          let selectedTab = $(`#${tabName}`)
          selectedTab.css('display', 'block');
          selectedTab.addClass('active');
        }
    </script>
}