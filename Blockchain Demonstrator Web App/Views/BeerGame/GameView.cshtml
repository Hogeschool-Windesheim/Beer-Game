@using Microsoft.CodeAnalysis
@using BlockchainDemonstratorApi.Models.Classes
@model BlockchainDemonstratorApi.Models.Classes.Game

<section class="actor-display">
    @if (Model != null)
    {
        @foreach (var player in Model.Players)
        {
            <section id="section-@player.Role.Id">
                <h3 name="name">Name: @player.Name</h3>
                <h3 name="role">Role: @player.Role.Id</h3>
                <h3 name="balance">Balance: @Math.Round(player.Balance, 2)</h3>
                <h3 name="profit">Profit: @Math.Round(player.Profit, 2)</h3>
                <h3 name="margin">Margin: @Math.Round(player.Margin, 2)</h3>
                <h3 name="inventory">Inventory: @player.Inventory</h3>
                <h3 name="backorder">Backorder: @player.Backorder</h3>

                @foreach (var order in player.IncomingOrders)
                {
                    @if (order.OrderDay == Model.CurrentDay - BlockchainDemonstratorApi.Models.Classes.Factors.RoundIncrement)
                    {
                        <h3 name="incomingOrder">Incoming order: @order.Volume</h3>
                    }
                }
                <h3>Incoming deliveries</h3>
                <table name="incomingDeliveries" class="order-history">
                    <thead>
                        <tr>
                            <th>Volume</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in player.OutgoingOrders)
                        {
                            @foreach (var delivery in order.Deliveries)
                            {
                                @if (delivery.ArrivalDay <= Model.CurrentDay && delivery.ArrivalDay > Model.CurrentDay - Factors.RoundIncrement)
                                {
                                    <tr>
                                        <td class="order-history">@delivery.Volume</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>

                <form>
                    <h6>Order volume: </h6>
                    <input type="number" name="order">
                </form>

                <h3>Order history:</h3>
                <table name="orderHistory" class="order-history">
                    <thead>
                        <tr>
                            <th>Order number</th>
                            <th>Volume</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (BlockchainDemonstratorApi.Models.Classes.Order order in player.OutgoingOrders)
                        {
                            @if (order.OrderDay >= 1)
                            {
                                <tr>
                                    <td class="order-history">@order.OrderNumber</td>
                                    <td class="order-history">@order.Volume</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

                <h3>Payments:</h3>
                <table name="payments" class="order-history">
                    <thead>
                        <tr>
                            <th>Topic</th>
                            <th>Amount</th>
                            <th>Due day</th>
                            <th>From player</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Payment payment in player.Payments)
                        {
                            @if (payment.DueDay <= Model.CurrentDay && payment.DueDay > Model.CurrentDay - Factors.RoundIncrement)
                            {
                                <tr style='background-color:yellow'>
                                    <td>@payment.Topic</td>
                                    @if (payment.Amount >= 0) {<td style="color:green">@payment.Amount</td>}
                                    else { <td style="color:red">@payment.Amount</td>}
                                    <td>@payment.DueDay</td>
                                    <td>@payment.FromPlayer</td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td>@payment.Topic</td>
                                    @if (payment.Amount >= 0) {<td style="color:green">@payment.Amount</td>}
                                    else { <td style="color:red">@payment.Amount</td>}
                                    <td>@payment.DueDay</td>
                                    <td>@payment.FromPlayer</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </section>
        }
    }
</section>
<button onclick="BeerGame.sendOrders('@Model.Id')">Send orders</button>

@section Scripts
{
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/BeerGame.js"></script>
    <script>
        BeerGame.init("@Model.Id", "");
    </script>
}