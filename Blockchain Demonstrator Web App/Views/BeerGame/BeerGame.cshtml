@using BlockchainDemonstratorApi.Models.Classes
@model BlockchainDemonstratorApi.Models.Classes.Player

@{
    ViewData["Title"] = "BeerGame";
    int currentDay = (int) ViewData["CurrentDay"];
}

    <section id="section-@Model.Role.Id" class="game-ui">
    <section class="game-ui--left">
        <article class="name-article ui-item">
            <p>@Model.Name</p>
            <p>@Model.Role.Id</p>
            <p id="currentDay">day: @ViewData["CurrentDay"]</p>
            <p id="balance-@Model.Role.Id"><b>Balance:</b> @Math.Round(Model.Balance, 2)</p>
        </article>

        <article class="inventory-article ui-item">
            <p><b>incoming delivery</b></p>
            <table id="incomingDeliveries-@Model.Role.Id" class="order-history">
                <thead>
                <tr>
                    <th>Volume</th>
                </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model.OutgoingOrders)
                    {
                        @foreach (var delivery in order.Deliveries)
                        {
                            @if (delivery.ArrivalDay <= currentDay && delivery.ArrivalDay > currentDay - Factors.RoundIncrement)
                            {
                                <tr>
                                    <td class="order-history">@delivery.Volume</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
            <p id="inventory-@Model.Role.Id"><b>inventory:</b> @Model.Inventory</p>
        </article>

        <article class="backorder-article ui-item">
            @foreach (var order in Model.IncomingOrders)
            {
                @if (order.OrderDay == (int) ViewData["CurrentDay"] - Factors.RoundIncrement)
                {
                    <p id="incoming-order-@Model.Role.Id"><b>Incoming order:</b> @order.Volume</p>
                }
            }
            <div id="backorder-@Model.Role.Id">
                <b>backorder:</b> @Model.Backorder
            </div>
        </article>
    </section>

    <section class="game-ui--right">
        <article class="input-article ui-item">
            <form>
                <input class="place-order-text" type="text" placeholder="Order volume">
                <button class="place-order-button" type="button">Place order</button>
            </form>
        </article>

        <article class="order-history-article ui-item">
            <p><b>Order History</b></p>
            <table id="orderHistory-@Model.Role.Id" class="order-history">
                <thead>
                <tr>
                    <th>Order number</th>
                    <th>Volume</th>
                </tr>
                </thead>
                <tbody>
                    @foreach (BlockchainDemonstratorApi.Models.Classes.Order order in Model.OutgoingOrders)
                    {
                        @if (order.OrderDay >= 1)
                        {
                            <tr>
                                <td class="order-history">@order.OrderNumber</td>
                                <td class="order-history">@order.Volume</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </article>
    </section>
</section>



@section Scripts
{
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/BeerGame.js"></script>
    <script>
    $(() => {    
        $(".place-order-button").on('click', BeerGame.Signal.sendOrder);
    });
    </script>
}